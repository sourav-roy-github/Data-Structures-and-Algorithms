/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int getMinimumDifference(TreeNode root) {
        List<Integer> prev = new ArrayList();
        int[] minimum = new int[]{Integer.MAX_VALUE};
        inorder(root,minimum,prev);
        return minimum[0];
    }
    public void inorder(TreeNode root, int[] minimum ,List<Integer> prev){
        if(root == null) return;
        inorder(root.left, minimum, prev);
        if(prev.isEmpty()){
            prev.add(root.val);
        }
        else{
            minimum[0] = Math.min(minimum[0], Math.abs(root.val - prev.get(0)));
            prev.set(0, root.val);
        }
        inorder(root.right, minimum, prev);
    }
}
