class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        
        List<String> l = new ArrayList<>();
        if(root == null){
            return l;
        } 
        String curr_path = Integer.toString(root.val);
        if(root.left == null && root.right == null){
            l.add(curr_path);
        }
        if(root.left != null) dfs(root.left,curr_path,l);
        if(root.right != null) dfs(root.right,curr_path,l);
        
        return l;
    }
    public void dfs(TreeNode node, String curr_path, List<String> l){
        curr_path += "->" + node.val;
        if(node.left == null && node.right == null){
            l.add(curr_path);
            return;
        }
        if(node.left != null) dfs(node.left,curr_path,l);
        if(node.right != null) dfs(node.right,curr_path,l);
    }
}
