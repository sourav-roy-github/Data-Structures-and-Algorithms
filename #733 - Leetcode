class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        if(image == null || image.length == 0 || image[0] == null || image[0].length == 0 || image[sr][sc] == newColor)
            return image;
        int m =image.length;
        int n = image[0].length;
        int initial_color = image[sr][sc];
        Queue<int[]> queue = new LinkedList<>();
        queue.add(new int[]{sr, sc});
        
        //Direction array
        int[][] dirs = {{0,1},{0,-1},{1,0},{-1,0}};
        
        while(!queue.isEmpty()){
            int size = queue.size();
            image[sr][sc] = newColor;
            for(int x = 0; x < size; x++){
                int[] pair = queue.poll();
                for(int[] dir : dirs){
                    int i = pair[0] + dir[0];
                    int j = pair[1] + dir[1];
                    if(i >= 0 && i < m && j >= 0 && j < n && image[i][j] == initial_color){
                        image[i][j] = newColor;
                        queue.add(new int[]{i,j});
                    }
                }
            }
        }
        return image;
    }
}
