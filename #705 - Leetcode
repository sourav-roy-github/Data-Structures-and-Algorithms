class MyHashSet {

    /** Initialize your data structure here. */
    LinkedList<Entry>[] map;
    public static int size = 10000;
    public MyHashSet() {
        map = new LinkedList[size];
    }
    
    public void add(int key) {
        int bucket = key % size;
			if(map[bucket] == null) {
				map[bucket] = new LinkedList<Entry>();
				map[bucket].add(new Entry(key));
			}
			else {
				for(Entry entry : map[bucket]){
					if(entry.key == key){
						return;
					}
				}
				map[bucket].add(new Entry(key));
			}
    }
    
    public void remove(int key) {
        int bucket = key % size;
			Entry toRemove = null;
			if(map[bucket] == null) return;
			else {
				for(Entry entry : map[bucket]){
					if(entry.key == key) {
						toRemove = entry;
					}
				}
				if(toRemove == null) return;
				map[bucket].remove(toRemove);
			}
    }
    
    /** Returns true if this set contains the specified element */
    public boolean contains(int key) {
        int bucket = key % size;
			LinkedList<Entry> entries = map[bucket];
			if(entries == null) return false;
			for(Entry entry : entries) {
				if(entry.key == key) return true;
			}
			return false;
    }
}

class Entry{
    public int key;
    public Entry(int key){
        this.key = key;
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */
